<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 
		"-//mybatis.org//DTD Mapper 3.0//EN" 
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
		
<mapper namespace="com.hotel.reservation.ReservationDAO">
	
	<!-- 예약정보 추가 -->
	<insert id="insertReservation" parameterType="reservation">
	insert into reservation (re_indate, re_outdate, re_daycount, re_payment, re_calendar_pk, re_cu_id)
		values (to_date(#{re_indate},'YYYY-MM-DD') , to_date(#{re_outdate},'YYYY-MM-DD') , #{re_daycount}, #{re_payment}, #{re_calendar_pk}, #{re_cu_id})
	</insert>
	
	<!-- 마지막 예약번호 불러오기 -->
	<select id="selectIDX" resultType="int" >
		select max(re_idx) from reservation
	</select>
	
	
	<!-- 고객이 예약한 리스트 불러오기 -->
	<select id="selectReservationInfo" resultType="reservation" parameterType="string">
	 select hotel.ho_name,
             room.ro_roomtype,
             customer.cu_id,
             customer.cu_name,
             reservation.*
				from reservation
				             left outer join customer on customer.cu_id = reservation.re_cu_id
				             left outer join calendar on calendar.calendar_pk = reservation.re_calendar_pk
				left outer join room on room.ro_pk = calendar.calendar_ro_pk
				             left outer join hotel on room.ro_ho_name = hotel.ho_name
				       where customer.cu_id = #{cu_id}  
        order by reservation.re_paydate desc
	</select>

	<!-- 예약이 완료되면 관리자에게 해당 예약내역 메일로 보내기 -->
	<select id="selectOneReservation" resultType="reservation">
		select hotel.ho_name,
	        admin.ad_email,
	        admin.ad_id,
	        admin.ad_name,
			reservation.re_idx,
			reservation.re_paydate,
			reservation.re_indate,
			reservation.re_outdate,
		
			customer.cu_name,
			customer.cu_pnum,
		
			room.ro_roomtype,
		
			reservation.re_daycount,
			reservation.re_payment

		from reservation
	
			left outer join customer on customer.cu_id = reservation.re_cu_id
			left outer join calendar on calendar.calendar_pk = reservation.re_calendar_pk
			left outer join room on room.ro_pk = calendar.calendar_ro_pk
			left outer join hotel on room.ro_ho_name = hotel.ho_name
			left outer join admin on hotel.ho_ad_id = admin.ad_id
		where re_idx = #{re_idx}

	</select>
	
	<!-- 	회원이 취소 버튼을 누르면 N에서 Y로 변경 -->
	<update id="updateCancel" parameterType="reservation">
		update reservation set 
	    re_canceldate = sysdate,
	    re_payment = 0,
	    re_cancelyesorno = 'Y'
			where re_idx = #{re_idx}
	</update>

</mapper>
